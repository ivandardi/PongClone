#ifndef UTIL_H
#define UTIL_H

////////////////////////////////////////////////////////////
// Headers
////////////////////////////////////////////////////////////
#include <random>

////////////////////////////////////////////////////////////
/// \brief Utilities class
///
////////////////////////////////////////////////////////////
class Util {

public:

    ////////////////////////////////////////////////////////////
    /// \brief Returns either 1 or -1 randomly
    ///
    ///
    /// \return 50% chance of returning 1, 50% chance of returning -1
    ///
    ////////////////////////////////////////////////////////////
    static int getRandomSignal();

    ////////////////////////////////////////////////////////////
    /// \brief Returns a random int in the interval [a, b]
    ///
    ///
    /// \return Returns a random int in the interval [a, b]
    ///
    ////////////////////////////////////////////////////////////
    static int getRandomInt(int a, int b);

    ////////////////////////////////////////////////////////////
    /// \brief Returns a random float in the interval [a, b]
    ///
    /// \return Returns a random float in the interval [a, b]
    ///
    ////////////////////////////////////////////////////////////
    static float getRandomFloat(float a, float b);

private:

    ////////////////////////////////////////////////////////////
    // Member data
    ////////////////////////////////////////////////////////////
    static std::mt19937 _rng; ///< Random number generator
};

#endif // UTIL_H
